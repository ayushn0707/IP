% Program for Huffman encoding and decoding.

clc;
close all;
clear all;
I = imread('cameraman.tif');
I = imresize(I, [4 NaN]);
disp('the pixel values are:');
disp(I);
subplot(1,3,1); imshow(uint8(I)); title('Original Image');

[m,n] = size(I);
Totalcount=m*n;
symbols = unique(I);
disp('the unique symbols are:');
disp(symbols);

counts=histc(I(:),symbols);
pro=counts./Totalcount;
disp('the probabilities are:');
disp(pro);

[dict,avglen]=huffmandict(symbols,pro);
disp('the average length of the code is:');
disp(avglen);

H=entropy(uint8(I));
disp('Entropy is:');
disp(H);

E=(H/avglen)*100;
disp('Efficiency is:');
disp(E);

disp('Compression Ratio is:');
Cr=(Totalcount*8)/(Totalcount*avglen)
disp('Relative data redundancy is:');
RD = (1 - (1/Cr))*100
newvec=reshape(I.',1,[] );
subplot(1,3,2); imshow(I.'); title('Encoded Image');

hcode=huffmanenco(newvec,dict);
disp('The Huffman encoded code is:');
disp(hcode);

DD1=huffmandeco(hcode,dict);
disp('The Huffman decoded code is:');
disp(DD1);

DD=uint8(DD1);
Restore=reshape(DD,4,4);
subplot(1,3,3); imshow(Restore.'); title('Decoded Image');