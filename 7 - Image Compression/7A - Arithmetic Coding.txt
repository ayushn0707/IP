% Program for Arithmetic encoding and decoding of an image.

clc;
close all;
clear all;

I = imread('cameraman.tif');
I = imresize(I, [3 NaN]);
disp('The pixel values are:');
disp(I);
subplot(1,3,1);imshow(uint8(I));title('Original image');

str=reshape(I.',1,[] ); % Convert Image from 2D to 1D
subplot(1,3,2);imshow(I.');title('Encoded Image');

len = length(str);
fprintf('The length of the string is: %d\n', len);

u = unique(str)
disp('the unique symbols/characters are:');
disp(u);

% length of the unique characters string
len_unique = length(u);
fprintf('The length of unique character string is: %d\n', len_unique);

z = zeros(1, len_unique);
p = zeros(1, len_unique);
for i = 1 : len_unique
z(i) = length(findstr(str, u(i)));
p(i) = z(i) / len;
end
display(z);
display(p);
cpr = cumsum(p);
newcpr = [0 cpr];
display(cpr);
display(newcpr);

% % % make table till 'len_unique' size
for i = 1 : len_unique
% % % in first column we are then placing 'newcpr' values
table(i, 1) = newcpr(i);
% % % in second column we are placing 'cpr' values
table(i, 2) = cpr(i);
end
% % % Displaying the lookup table
display('The lookup table is: ')
display(table);

% % % Encoder Table
LL = 0;
UL = 1;
for i = 1 : len
for j = 1 : len_unique
% % % if the value from 'str' matches with 'u' then
if str(i) == u(j);
pos = j;
j = j + 1;
% % % displaying position of symbol in unique string
display(pos);
% % % getting the tag value of the matched character
diff_range = UL - LL;
UL = LL + (diff_range .* table(pos, 2));
LL = LL + (diff_range .* table(pos, 1));
i = i + 1;
break
end
end
end
% % % displaying tag value
tag = LL;
display(tag);

% % % DECODING
%str = '';
str = [];
for i = 1 : len
for j = 1 : len_unique
% % % If tag value falls between a certain range in lookup table then
if (tag>=table(j, 1)) && (tag<table(j, 2))
pos = j;
tag = (tag - table(pos, 1)) / p(j);
% % % Getting the matched tag value character
decoded_str = u(pos);
% % % Image pixel values concatenating 'decoded_str' into 'str'
str = horzcat(str, decoded_str);
break
end
end
end

% % % Displaying final decoded image pixel values
display(str)
DD=uint8(str);
Restore=reshape(DD,3,3);
subplot(1,3,3); imshow(Restore.'); title('Decoded Image');